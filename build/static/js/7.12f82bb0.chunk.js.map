{"version":3,"sources":["stores/api/admin/actions.js","shared/core/patterns.js","pages/Feature/Users/UsersList/components/dialogs/AddAssistantDialog/index.js","pages/Feature/Users/UsersList/components/dialogs/RevokeUserDialog/index.js","pages/Feature/Users/UsersList/components/dialogs/ActivateUserDialog/index.js","pages/Feature/Users/UsersList/components/dialogs/NewPasswordDialog/index.js","pages/Feature/Users/UsersList/components/tables/UsersTable/index.js","pages/Feature/Users/UsersList/index.js"],"names":["addPA","payload","resolve","reject","type","getUsers","user","getPAs","getJobs","getJobDetailForAdmin","assignPA","getAssignedJobs1","getAssignedJobs2","revokePA","activatePA","resetPassword","unassignPA","EMAIL_PATTERN","PASSWORD_PATTERN","RegExp","source","schema","yup","shape","email","required","matches","confirm_email","oneOf","password","confirm_password","AddAssistantDialog","close","dispatch","useDispatch","useState","loading","setLoading","useForm","mode","resolver","yupResolver","formState","register","handleSubmit","Header","Body","className","onSubmit","data","placeholder","errors","message","isLoading","color","disabled","isValid","onClick","RevokeUserDialog","props","revoking","setRevoking","Footer","id","res","success","ActivateUserDialog","NewPasswordDialog","UsersTable","outParams","readOnly","useTable","setData","hasMore","appendData","setHasMore","page","setParams","params","resetData","setPage","openDialog","useDialog","useSelector","state","authReducer","fetchData","pageValue","paramsValue","page_id","results","isHasMore","prev","useEffect","classNames","onLoadMore","dataLength","length","HeaderCell","map","row","ind","BodyRow","BodyCell","formatDate","created_at","detectTypeUser","last_login_at","last_login_ip_address","banned","size","afterClosed","result","find","x","triggerRevoke","triggerActivate","triggerResetPW","UsersList","reload","setReload","forceReload","setTimeout","is_super_admin","value","search","onChange","e","target","trim"],"mappings":"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","file":"static/js/7.12f82bb0.chunk.js","sourcesContent":["export const addPA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'ADD_PA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getUsers = (payload, user, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_USERS',\n  payload,\n  user,\n  resolve, \n  reject,\n});\n\n\nexport const getPAs = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_PAS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getJobs = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_JOBS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getJobDetailForAdmin = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_JOB_DETAIL_FOR_ADMIN',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const assignPA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'ASSIGN_PA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getAssignedJobs1 = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_ASSIGNED_JOBS_1',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getAssignedJobs2 = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_ASSIGNED_JOBS_2',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const revokePA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'REVOKE_PA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const activatePA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'ACTIVATE_PA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const resetPassword = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'RESET_PASSWORD',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const unassignPA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'UNASSIGN_PA',\n  payload,\n  resolve, \n  reject,\n});","/* eslint-disable */\n\nexport const NAME_PATTERN = /^[\\.a-zA-Z\\s ]*$/;\nexport const EMAIL_PATTERN =\n  /^[_A-Za-z0-9-+]+(\\.[_A-Za-z0-9-+]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z‌​]{2,})$/;\nexport const SPECIAL_CHARACTER_PATTERN =\n  /(?=.*?[\\!\\\"\\-\\@\\#\\$\\%\\&\\*\\(\\)\\'\\^\\`\\.\\,\\/\\:\\;\\_\\+\\=\\<\\>\\?\\{\\}\\[\\\\\\]])/;\nexport const DIGITIZED_PATTERN = /(?=.*?[0-9])/;\nexport const NUMBER_PATTERN = /(^[0-9])/;\nexport const NEGATIVE_NUMBER_PATTERN = /^-?[1-9]/;\nexport const CHARACTER_PATTERN = /(?=.*?[a-zA-Z])/;\nexport const FORUM_PATTERN = /^[A-Za-z0-9-]*$/;\nexport const USERNAME_PATTERN = /^[A-Za-z0-9-]*$/;\nexport const TELEGRAM_PATTERN = /(^)@[A-Za-z0-9-\\_]*$/;\nexport const ENTITY_PATTERN = /^[A-Za-z0-9-\\s\\.\\_ ]*$/;\nexport const PASSWORD_PATTERN = new RegExp(\n  `${CHARACTER_PATTERN.source}${DIGITIZED_PATTERN.source}${SPECIAL_CHARACTER_PATTERN.source}`\n);\n","import { Button, Dialog } from '@shared/partials';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@shared/core/patterns';\nimport { useDispatch } from \"react-redux\";\nimport { addPA } from \"@stores/api/admin/actions\"; \nimport { useState } from 'react';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email is required')\n    .matches(\n      EMAIL_PATTERN,\n      \"Email is invalid\"\n    ),\n  confirm_email: yup\n    .string()\n    .required('Confirm Email is required')\n    .oneOf([yup.ref('email'), null], 'Email not match'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .matches(\n      PASSWORD_PATTERN,\n      \"Password is invalid\"\n    ),\n  confirm_password: yup\n    .string()\n    .required('Confirm Password is required')\n    .oneOf([yup.ref('password'), null], 'Password not match'),\n});\n\nexport const AddAssistantDialog = ({ close }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n  const {\n    formState,\n    register,\n    handleSubmit,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(schema),\n  });\n\n\n  const onSubmit = data => {\n    setLoading(true);\n    dispatch(\n      addPA(\n        data, \n        () => {\n          setLoading(false);\n          close(true);\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  };\n\n  return (\n    <Dialog>\n      <Dialog.Header>\n        + Add a New Program Assistant\n      </Dialog.Header>\n      <Dialog.Body>\n        <form className=\"text-center\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-control\">\n            <input placeholder=\"Email Address\" {...register('email')} />\n            {formState.errors?.email && (\n              <p className=\"form-error\">\n                {formState.errors.email?.message}\n              </p>\n            )}\n          </div>\n          <div className=\"form-control\">\n            <input placeholder=\"Confirm Email Address\" {...register('confirm_email')} />\n            {formState.errors?.confirm_email && (\n              <p className=\"form-error\">\n                {formState.errors.confirm_email?.message}\n              </p>\n            )}\n          </div>\n          <div className=\"form-control\">\n            <input type=\"password\" placeholder=\"Create Password\" {...register('password')} />\n            {formState.errors?.password && (\n              <p className=\"form-error\">\n                {formState.errors.password?.message}\n              </p>\n            )}\n          </div>\n          <div className=\"form-control\">\n            <input type=\"password\" placeholder=\"Confirm Password\" {...register('confirm_password')} />\n            {formState.errors?.confirm_password && (\n              <p className=\"form-error\">\n                {formState.errors.confirm_password?.message}\n              </p>\n            )}\n          </div>\n          <div>\n            <p className=\"text-sm pb-5\">Please share these credentials with the user!</p>\n            <Button type=\"submit\" isLoading={loading} className=\"mx-auto block !w-3/5 mb-2.5 px-6\" color=\"primary\" disabled={!formState.isValid || loading}>+ Create New User</Button>\n            <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel & Go Back</button>\n          </div>\n        </form>\n      </Dialog.Body>\n    </Dialog>\n  )\n}\n","import { Button } from \"@shared/partials\";\nimport { useState } from \"react\";\nimport { Dialog } from \"@shared/partials/dialog/Provider\";\nimport { useDispatch } from \"react-redux\";\nimport { revokePA } from \"../../../../../../../stores/api/admin/actions\";\n\nexport const RevokeUserDialog = ({ user, className, close }) => {\n  const props = {\n    className,\n  };\n  const [revoking, setRevoking] = useState();\n  const dispatch = useDispatch();\n\n  const revokeAdmin = () => {\n    setRevoking(true);\n    dispatch(\n      revokePA({ id: user?.id }, \n        (res) => {\n          setRevoking(false);\n          if (res.success) {\n            close(user);\n          }\n        },\n        () => {\n          setRevoking(false);\n        }\n      )\n    );\n  }\n\n  return (\n    <Dialog {...props}>\n      <Dialog.Header>\n        <h3 className=\"text-lg text-red\">Revoke user</h3>\n      </Dialog.Header>\n      <Dialog.Body>\n        <p className=\"text-sm text-center\">Doing this will revoke access privileges from {user?.email}. Are you sure you want to continue?</p>\n      </Dialog.Body>\n      <Dialog.Footer>\n        <div className=\"mt-8\">\n          <Button type=\"submit\"\n            onClick={revokeAdmin}\n            isLoading={revoking}\n            className=\"mx-auto block !w-3/5 mb-2.5 px-6\"\n            color=\"danger\"\n            disabled={revoking}>\n              Revoke user\n          </Button>\n          <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel & Go Back</button>\n        </div>\n      </Dialog.Footer>\n    </Dialog>\n  )\n};\n","import { Button } from \"@shared/partials\";\nimport { useState } from \"react\";\nimport { Dialog } from \"@shared/partials/dialog/Provider\";\nimport { useDispatch } from \"react-redux\";\nimport { activatePA } from \"../../../../../../../stores/api/admin/actions\";\n\nexport const ActivateUserDialog = ({ user, className, close }) => {\n  const props = {\n    className,\n  };\n  const [loading, setLoading] = useState();\n  const dispatch = useDispatch();\n\n  const revokeAdmin = () => {\n    setLoading(true);\n    dispatch(\n      activatePA({ id: user?.id }, \n        (res) => {\n          setLoading(false);\n          if (res.success) {\n            close(user);\n          }\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  }\n\n  return (\n    <Dialog {...props}>\n      <Dialog.Header>\n        <h3 className=\"text-lg text-green\">Revoke user</h3>\n      </Dialog.Header>\n      <Dialog.Body>\n        <p className=\"text-sm text-center\">\n          Doing this will reinstate privileges for {user?.email}. Are you sure you want to continue?\n        </p>\n      </Dialog.Body>\n      <Dialog.Footer>\n        <div className=\"mt-8\">\n          <Button type=\"submit\"\n            onClick={revokeAdmin}\n            isLoading={loading}\n            className=\"mx-auto block !w-3/5 mb-2.5 px-6\"\n            color=\"success\"\n            disabled={loading}>\n              Activate user\n          </Button>\n          <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel & Go Back</button>\n        </div>\n      </Dialog.Footer>\n    </Dialog>\n  )\n};\n","import { Button, Dialog } from '@shared/partials';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { PASSWORD_PATTERN } from '@shared/core/patterns';\nimport { useDispatch } from \"react-redux\";\nimport { resetPassword } from \"@stores/api/admin/actions\"; \nimport { useState } from 'react';\n\nconst schema = yup.object().shape({\n  password: yup\n    .string()\n    .required('Password is required')\n    .matches(\n      PASSWORD_PATTERN,\n      \"Password is invalid\"\n    ),\n  confirm_password: yup\n    .string()\n    .required('Confirm Password is required')\n    .oneOf([yup.ref('password'), null], 'Password not match'),\n});\n\nexport const NewPasswordDialog = ({ user, close }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n  const {\n    formState,\n    register,\n    handleSubmit,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(schema),\n  });\n\n\n  const onSubmit = data => {\n    setLoading(true);\n    dispatch(\n      resetPassword(\n        {...data, id: user.id}, \n        () => {\n          setLoading(false);\n          close(true);\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  };\n\n  return (\n    <Dialog>\n      <Dialog.Header>\n        Set a new password\n      </Dialog.Header>\n      <Dialog.Body>\n        <form className=\"text-center\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-control\">\n            <input type=\"password\" placeholder=\"New Password\" {...register('password')} />\n            {formState.errors?.password && (\n              <p className=\"form-error\">\n                {formState.errors.password?.message}\n              </p>\n            )}\n          </div>\n          <div className=\"form-control\">\n            <input type=\"password\" placeholder=\"Confirm New Password\" {...register('confirm_password')} />\n            {formState.errors?.confirm_password && (\n              <p className=\"form-error\">\n                {formState.errors.confirm_password?.message}\n              </p>\n            )}\n          </div>\n          <div>\n            <p className=\"text-sm pb-5\">Please share these credentials with the user!</p>\n            <Button type=\"submit\" isLoading={loading} className=\"mx-auto block !w-3/5 mb-2.5 px-6\" color=\"primary\" disabled={!formState.isValid || loading}>Reset Password</Button>\n            <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel & Go Back</button>\n          </div>\n        </form>\n      </Dialog.Body>\n    </Dialog>\n  )\n}\n","import { Table, useTable, useDialog, Button } from '@shared/partials';\nimport { getUsers } from '../../../../../../../stores/api/admin/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { RevokeUserDialog } from '../../dialogs/RevokeUserDialog';\nimport { ActivateUserDialog } from '../../dialogs/ActivateUserDialog';\nimport { NewPasswordDialog } from '../../dialogs/NewPasswordDialog';\nimport { detectTypeUser, formatDate } from '@shared/core/utils';\nimport './style.scss';\nimport classNames from 'classnames';\n\nexport const UsersTable = ({ outParams, readOnly }) => {\n  const {\n    data,\n    register,\n    setData,\n    hasMore,\n    appendData,\n    setHasMore,\n    page,\n    setParams,\n    params,\n    resetData,\n    setPage,\n  } = useTable();\n  const dispatch = useDispatch();\n  const { openDialog } = useDialog();\n  const user = useSelector(state => state.authReducer?.user);\n  \n  const fetchData =(pageValue = page, paramsValue = params) => {\n    dispatch(\n      getUsers({ ...paramsValue, page_id: pageValue }, user, (results, isHasMore) => {\n        setHasMore(isHasMore);\n        appendData(results);\n        setPage(prev => prev + 1);\n      })\n    );\n  }\n\n  useEffect(() => {\n    if (outParams) {\n      setParams(outParams);\n      resetData();\n      fetchData(1, outParams);\n    }\n  }, [outParams]);\n\n  const triggerRevoke = (user) => {\n    if (!readOnly) {\n      openDialog(\n        <RevokeUserDialog \n          user={user}\n          afterClosed={(result) => {\n            if (result) {\n              const currentUser = data.find(x => x.id === result.id);\n              currentUser.banned = 1;\n              setData([...data]);\n            }\n          }}\n        />\n      )\n    }\n  }\n\n  const triggerActivate = (user) => {\n    if (!readOnly) {\n      openDialog(\n        <ActivateUserDialog \n          user={user}\n          afterClosed={(result) => {\n            if (result) {\n              const currentUser = data.find(x => x.id === result.id);\n              currentUser.banned = 0;\n              setData([...data]);\n            }\n          }}\n        />\n      )\n    }\n  }\n\n  const triggerResetPW = (user) => {\n    openDialog(\n      <NewPasswordDialog user={user} />\n    )\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Table\n      {...register}\n      className={classNames(readOnly ? 'read-only' : '', `users-table h-full`)}\n      onLoadMore={fetchData}\n      hasMore={hasMore}\n      dataLength={data.length}\n    >\n      <Table.Header>\n        <Table.HeaderCell>\n          <p>Email</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Date Added</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Type</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Last Login</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>IP Address</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Action</p>\n        </Table.HeaderCell>\n      </Table.Header>\n      <Table.Body className=\"padding-tracker\">\n        {data.map((row, ind) => (\n          <Table.BodyRow key={ind}>\n            <Table.BodyCell>\n              <p className=\"break-words\">{row.email}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              {formatDate(row.created_at)}\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p className=\"capitalize\">{detectTypeUser(row)}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{formatDate(row.last_login_at)}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              {row.last_login_ip_address}\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <div className=\"flex gap-4\">\n                {!row.banned && <Button color=\"danger\" size=\"xs\" onClick={() => triggerRevoke(row)}>Revoke</Button>}\n                {!!row.banned && <Button color=\"success\" size=\"xs\" onClick={() => triggerActivate(row)}>Activate</Button>}\n                <Button color=\"primary\" size=\"xs\" onClick={() => triggerResetPW(row)}>Reset Password</Button>\n              </div>\n            </Table.BodyCell>\n          </Table.BodyRow>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n","import { Button, Card, CardHeader, CardBody, useDialog } from '@shared/partials';\nimport { useState } from 'react';\nimport { AddAssistantDialog } from './components/dialogs/AddAssistantDialog';\nimport { UsersTable } from './components/tables/UsersTable';\nimport { useSelector } from \"react-redux\";\n\nconst UsersList = () => {\n  const { openDialog } = useDialog();\n  const [reload, setReload] = useState();\n  const [params, setParams] = useState();\n  const user = useSelector(state => state.authReducer?.user);\n\n  const openAddAssistantDialog = () => {\n    openDialog(\n      <AddAssistantDialog afterClosed={(result) => forceReload(result)}/>\n    )\n  }\n\n  const forceReload = (result) => {\n    if (result) {\n      setReload(true);\n      setTimeout(() => {\n        setReload(false);\n      }, 100);\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {!!user.is_super_admin && (<div className=\"flex justify-end pb-5\">\n        <Button className=\"px-6\" color=\"primary\" onClick={openAddAssistantDialog}>+ New Program Assistant</Button>\n      </div>)}\n      <Card className=\"flex-1 min-h-0\">\n        <CardHeader>\n          <div className=\"w-full flex justify-between\">\n            <h2>User Management</h2>\n            <input\n              className=\"text-xs\"\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={params?.search}\n              onChange={e => setParams({ search: e.target.value?.trim() })}\n            />\n          </div>\n        </CardHeader>\n        <CardBody>\n          {!reload && <UsersTable outParams={params} readOnly={!user.is_super_admin} />}\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default UsersList"],"sourceRoot":""}